
top_builddir=../../..
include $(top_builddir)/Makefile.conf

CFILES=int10.c int16.c int17.c hlt.c setup.c vgabios.c bios_symbols.c
XSFILES = bios.s
BIOS_START = 0xc000
ALL_CPPFLAGS += -DBIOS_START=$(BIOS_START)

all: lib bios_offsets.hh bios_data.xxd

include $(REALTOPDIR)/src/Makefile.common

# to support parallel build, we need a separate .o and .elf for every gen target
bios0.o bios1.o bios2.o: bios.s Makefile
	$(CPP) $(ALL_CPPFLAGS) -x assembler-with-cpp $< | $(AS) $(ASFLAGS) -o $@

.INTERMEDIATE: bios_data bios0.elf bios1.elf bios2.elf bios0.o bios1.o bios2.o

bios_data: bios0.elf
	objcopy -j .text -O binary $< $@

# Makefile defines BIOS_START so add to deps
bios%.elf: bios%.o Makefile
	# formal intermediate filename is necessary for xxd to name structure
	$(AS_LD) $(AS_LDFLAGS) -static --section-start .text=$(BIOS_START) -e bios_data_start -Map bios.map -o $@ $<
	chmod -x $@

bios_data.xxd: bios_data
	xxd -i $< $@

bios_symbols.c: bios1.elf
	nm -g -n $< | gawk '\
		BEGIN {\
		  COUNT=0;\
		  print "// Warning: autogenerated";\
	          print "";\
	          print "#include \"bios.h\"";\
	          print "";\
		  print "struct bios_symbol_entry bios_symbol[] = {";\
		}\
		{\
		  HEXSTR = sprintf("0x%s", $$1);\
		  ADDR = strtonum(HEXSTR);\
		  if (ADDR <= 0xffff) {\
		    COUNT++;\
		    printf "  { 0x%04x, \"%s\" },\n", ADDR, $$3;\
		  }\
		}\
		END {\
		  print "};";\
		  print "";\
	          print "int bios_symbol_num = " COUNT ";";\
		}\
		' > $@ || (rm -f $@ ; false)

bios_offsets.hh: bios2.elf
	nm -g -n $< | gawk '\
		BEGIN {\
		  print "// Warning: autogenerated";\
	          print "";\
		}\
		{\
		  HEXSTR = sprintf("0x%s", $$1);\
		  ADDR = strtonum(HEXSTR);\
		  if (ADDR <= 0xffff) {\
		    printf "#define %s 0x%04x\n", $$3, ADDR;\
		  }\
		}\
		END {\
		  print "";\
		}\
		' > $@ || (rm -f $@ ; false)

clean::
	rm -f *.o *.d bios_symbols.c bios_offsets.hh bios_data.xxd bios_data bios*.elf bios.map
